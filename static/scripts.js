
const getParameterByName = name => new URLSearchParams(window.location.search).get(name);

// Establish socket connection
var socket = io.connect();
var myClientID;

var p = new SimplePeer({
    initiator: Initiator,
    trickle: false
})
//p.on('error', err => console.log('error', err))
p.on('connect', () => {
        console.log('CONNECT')
        p.send('whatever' + Math.random())
})
p.on('data', data => {
        console.log('data: ' + data)
      })
socket.on('webrtc', function(data) {
    console.log(data);
    const [offer, initiator_id] = data;

    p.signal(JSON.parse(offer))

    p.on('signal', data => {
        console.log('SIGNAL', JSON.stringify(data));

        var signalingData = {
            client_id: myClientID, // The client identifier of this client
            target_client_id: initiator_id, // The client identifier of the target client
            signal_data: JSON.stringify(data) // The signaling data generated by simple-peer
        };

        socket.emit("message", signalingData);
    })
});

socket.on('client_id', function (id) {
    myClientID = id
    //Displaying qr code
    if (!Initiator){
        var qrCodeDiv = document.getElementById('qrcode');
        var qrCode = new QRCode(qrCodeDiv, {
            text: window.location.host + '/connectTo?client_id=' + myClientID,
            width: 128,
            height: 128,
        });
        document.getElementById('link').innerHTML = '<a href="' + '/connectTo?client_id=' + myClientID + '">link</a>'

    }
    //Sending offer otherwise
    if (Initiator){

        p.on('signal', data => {
            console.log('SIGNAL', JSON.stringify(data));

            var signalingData = {
                client_id: myClientID, // The client identifier of this client
                target_client_id: getParameterByName('client_id'), // The client identifier of the target client
                signal_data: JSON.stringify(data) // The signaling data generated by simple-peer
            };
            socket.emit("message", signalingData);
        })
    }

});
